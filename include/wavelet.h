//
// Created by milinda on 10/13/17.
/**
*@author Milinda Fernando
*School of Computing, University of Utah
*@brief computes the interpolation difference (wavelet coefficiencts) for a given unzipped variable.
*This computation then used for check trigger re-meshing.
*/
//

#ifndef SFCSORTBENCH_WAVELET_H
#define SFCSORTBENCH_WAVELET_H

#include "refel.h"

/**@brief : Reference element for order 3*/
//static const RefElement RE_OR3 = RefElement(1,3);

/**@brief : Reference element for order 4*/
//static const RefElement RE_OR4 = RefElement(1,4);

//static const RefElement RE_OR5 = RefElement(1,5);

//static const RefElement RE_OR6 = RefElement(1,6);

/**@brief : Reference element for order 7*/
//static const RefElement RE_OR7 = RefElement(1,7);

/**@brief : Reference element for order 8*/
//static const RefElement RE_OR8 = RefElement(1,8);




#define REFINE_INDEX_OFFSET 2
#define REFINE_END_OFFSET 9
#define NUM_REFINE_WAVELET_COEF 8
#define NUM_REFINE_INPUT_PTS 125

#define COARSE_INDEX_OFFSET 4
#define COARSE_END_OFFSET 13
#define NUM_COARSE_WAVELET_COEF 27
#define NUM_COARSE_INPUT_PTS 64

const double BH_EH_THRESHOLD_REFINE = 0.3;
const double BH_EH_THRESHOLD_COARSEN = 0.4;

// Below matrices are generated from HOMG (for uniform points.) matlab code. Don't change those unless you know exactly what you are doing.

static int isRefEleSetup =0;
static RefElement refEl;
static std::vector<double> wIn;
static std::vector<double> wOut;
static std::vector<double> interpIn;
static std::vector<double> interpOut;




static const double IW_5_2_REFINE[NUM_REFINE_WAVELET_COEF][NUM_REFINE_INPUT_PTS] = {
        { -0.0000596046 ,0.0007152557 ,0.0010728836 ,-0.0002384186 ,0.0000357628 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0085830688 ,0.1029968262 ,0.1544952393 ,-0.0343322754 ,0.0051498413 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,-0.0193119049 ,0.2317428589 ,0.3476142883 ,-0.0772476196 ,0.0115871429 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0009536743 ,0.0114440918 ,0.0171661377 ,-0.0038146973 ,0.0005722046 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0000214577 ,0.0002574921 ,0.0003862381 ,-0.0000858307 ,0.0000128746 },
        { 0.0000357628 ,-0.0002384186 ,0.0010728836 ,0.0007152557 ,-0.0000596046 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0051498413 ,-0.0343322754 ,0.1544952393 ,0.1029968262 ,-0.0085830688 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,0.0115871429 ,-0.0772476196 ,0.3476142883 ,0.2317428589 ,-0.0193119049 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0005722046 ,-0.0038146973 ,0.0171661377 ,0.0114440918 ,-0.0009536743 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0000128746 ,-0.0000858307 ,0.0003862381 ,0.0002574921 ,-0.0000214577 },
        { 0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0000596046 ,0.0007152557 ,0.0010728836 ,-0.0002384186 ,0.0000357628 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,-0.0085830688 ,0.1029968262 ,0.1544952393 ,-0.0343322754 ,0.0051498413 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0193119049 ,0.2317428589 ,0.3476142883 ,-0.0772476196 ,0.0115871429 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0009536743 ,0.0114440918 ,0.0171661377 ,-0.0038146973 ,0.0005722046 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,-0.0000214577 ,0.0002574921 ,0.0003862381 ,-0.0000858307 ,0.0000128746 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 },
        { -0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0000357628 ,-0.0002384186 ,0.0010728836 ,0.0007152557 ,-0.0000596046 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,0.0051498413 ,-0.0343322754 ,0.1544952393 ,0.1029968262 ,-0.0085830688 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0115871429 ,-0.0772476196 ,0.3476142883 ,0.2317428589 ,-0.0193119049 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0005722046 ,-0.0038146973 ,0.0171661377 ,0.0114440918 ,-0.0009536743 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,0.0000128746 ,-0.0000858307 ,0.0003862381 ,0.0002574921 ,-0.0000214577 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 },
        { 0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0000214577 ,0.0002574921 ,0.0003862381 ,-0.0000858307 ,0.0000128746 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0009536743 ,0.0114440918 ,0.0171661377 ,-0.0038146973 ,0.0005722046 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,-0.0193119049 ,0.2317428589 ,0.3476142883 ,-0.0772476196 ,0.0115871429 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0085830688 ,0.1029968262 ,0.1544952393 ,-0.0343322754 ,0.0051498413 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,-0.0000596046 ,0.0007152557 ,0.0010728836 ,-0.0002384186 ,0.0000357628 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 },
        { -0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0000128746 ,-0.0000858307 ,0.0003862381 ,0.0002574921 ,-0.0000214577 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0005722046 ,-0.0038146973 ,0.0171661377 ,0.0114440918 ,-0.0009536743 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,0.0115871429 ,-0.0772476196 ,0.3476142883 ,0.2317428589 ,-0.0193119049 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0051498413 ,-0.0343322754 ,0.1544952393 ,0.1029968262 ,-0.0085830688 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,0.0000357628 ,-0.0002384186 ,0.0010728836 ,0.0007152557 ,-0.0000596046 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 },
        { -0.0000214577 ,0.0002574921 ,0.0003862381 ,-0.0000858307 ,0.0000128746 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,0.0001430511 ,-0.0017166138 ,-0.0025749207 ,0.0005722046 ,-0.0000858307 ,-0.0009536743 ,0.0114440918 ,0.0171661377 ,-0.0038146973 ,0.0005722046 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,-0.0006437302 ,0.0077247620 ,0.0115871429 ,-0.0025749207 ,0.0003862381 ,0.0042915344 ,-0.0514984131 ,-0.0772476196 ,0.0171661377 ,-0.0025749207 ,-0.0193119049 ,0.2317428589 ,0.3476142883 ,-0.0772476196 ,0.0115871429 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,-0.0004291534 ,0.0051498413 ,0.0077247620 ,-0.0017166138 ,0.0002574921 ,0.0028610229 ,-0.0343322754 ,-0.0514984131 ,0.0114440918 ,-0.0017166138 ,-0.0128746033 ,0.1544952393 ,0.2317428589 ,-0.0514984131 ,0.0077247620 ,-0.0085830688 ,0.1029968262 ,0.1544952393 ,-0.0343322754 ,0.0051498413 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,0.0000357628 ,-0.0004291534 ,-0.0006437302 ,0.0001430511 ,-0.0000214577 ,-0.0002384186 ,0.0028610229 ,0.0042915344 ,-0.0009536743 ,0.0001430511 ,0.0010728836 ,-0.0128746033 ,-0.0193119049 ,0.0042915344 ,-0.0006437302 ,0.0007152557 ,-0.0085830688 ,-0.0128746033 ,0.0028610229 ,-0.0004291534 ,-0.0000596046 ,0.0007152557 ,0.0010728836 ,-0.0002384186 ,0.0000357628 },
        { 0.0000128746 ,-0.0000858307 ,0.0003862381 ,0.0002574921 ,-0.0000214577 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,-0.0000858307 ,0.0005722046 ,-0.0025749207 ,-0.0017166138 ,0.0001430511 ,0.0005722046 ,-0.0038146973 ,0.0171661377 ,0.0114440918 ,-0.0009536743 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,0.0003862381 ,-0.0025749207 ,0.0115871429 ,0.0077247620 ,-0.0006437302 ,-0.0025749207 ,0.0171661377 ,-0.0772476196 ,-0.0514984131 ,0.0042915344 ,0.0115871429 ,-0.0772476196 ,0.3476142883 ,0.2317428589 ,-0.0193119049 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,0.0002574921 ,-0.0017166138 ,0.0077247620 ,0.0051498413 ,-0.0004291534 ,-0.0017166138 ,0.0114440918 ,-0.0514984131 ,-0.0343322754 ,0.0028610229 ,0.0077247620 ,-0.0514984131 ,0.2317428589 ,0.1544952393 ,-0.0128746033 ,0.0051498413 ,-0.0343322754 ,0.1544952393 ,0.1029968262 ,-0.0085830688 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,-0.0000214577 ,0.0001430511 ,-0.0006437302 ,-0.0004291534 ,0.0000357628 ,0.0001430511 ,-0.0009536743 ,0.0042915344 ,0.0028610229 ,-0.0002384186 ,-0.0006437302 ,0.0042915344 ,-0.0193119049 ,-0.0128746033 ,0.0010728836 ,-0.0004291534 ,0.0028610229 ,-0.0128746033 ,-0.0085830688 ,0.0007152557 ,0.0000357628 ,-0.0002384186 ,0.0010728836 ,0.0007152557 ,-0.0000596046 },
};


static const double IW_4_3_COARSEN [NUM_COARSE_WAVELET_COEF][NUM_COARSE_INPUT_PTS] = {
        { 0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.2746582031 ,0.8239746094 ,-0.2746582031 ,0.0549316406 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 },
        { -0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0549316406 ,0.4943847656 ,0.4943847656 ,-0.0549316406 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 },
        { 0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0549316406 ,-0.2746582031 ,0.8239746094 ,0.2746582031 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 },
        { -0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 },
        { 0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 },
        { -0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 },
        { 0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.2746582031 ,0.8239746094 ,-0.2746582031 ,0.0549316406 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 },
        { -0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0549316406 ,0.4943847656 ,0.4943847656 ,-0.0549316406 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 },
        { 0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0549316406 ,-0.2746582031 ,0.8239746094 ,0.2746582031 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 },
        { -0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 },
        { 0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 },
        { -0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 },
        { 0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0988769531 ,0.2966308594 ,-0.0988769531 ,0.0197753906 ,0.0988769531 ,0.2966308594 ,-0.0988769531 ,0.0197753906 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0988769531 ,0.2966308594 ,-0.0988769531 ,0.0197753906 ,0.0988769531 ,0.2966308594 ,-0.0988769531 ,0.0197753906 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,-0.0109863281 ,-0.0329589844 ,0.0109863281 ,-0.0021972656 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 },
        { -0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0197753906 ,0.1779785156 ,0.1779785156 ,-0.0197753906 ,-0.0197753906 ,0.1779785156 ,0.1779785156 ,-0.0197753906 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0197753906 ,0.1779785156 ,0.1779785156 ,-0.0197753906 ,-0.0197753906 ,0.1779785156 ,0.1779785156 ,-0.0197753906 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,0.0021972656 ,-0.0197753906 ,-0.0197753906 ,0.0021972656 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 },
        { 0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0197753906 ,-0.0988769531 ,0.2966308594 ,0.0988769531 ,0.0197753906 ,-0.0988769531 ,0.2966308594 ,0.0988769531 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0197753906 ,-0.0988769531 ,0.2966308594 ,0.0988769531 ,0.0197753906 ,-0.0988769531 ,0.2966308594 ,0.0988769531 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,-0.0021972656 ,0.0109863281 ,-0.0329589844 ,-0.0109863281 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 },
        { -0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 },
        { 0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 },
        { -0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 },
        { 0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.2746582031 ,0.8239746094 ,-0.2746582031 ,0.0549316406 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 },
        { -0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0549316406 ,0.4943847656 ,0.4943847656 ,-0.0549316406 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 },
        { 0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0549316406 ,-0.2746582031 ,0.8239746094 ,0.2746582031 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 },
        { -0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,0.0109863281 ,0.0329589844 ,-0.0109863281 ,0.0021972656 ,-0.0012207031 ,-0.0036621094 ,0.0012207031 ,-0.0002441406 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,-0.0549316406 ,-0.1647949219 ,0.0549316406 ,-0.0109863281 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,0.1647949219 ,0.4943847656 ,-0.1647949219 ,0.0329589844 ,-0.0183105469 ,-0.0549316406 ,0.0183105469 ,-0.0036621094 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,0.0549316406 ,0.1647949219 ,-0.0549316406 ,0.0109863281 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 },
        { 0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,-0.0021972656 ,0.0197753906 ,0.0197753906 ,-0.0021972656 ,0.0002441406 ,-0.0021972656 ,-0.0021972656 ,0.0002441406 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,0.0109863281 ,-0.0988769531 ,-0.0988769531 ,0.0109863281 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,-0.0329589844 ,0.2966308594 ,0.2966308594 ,-0.0329589844 ,0.0036621094 ,-0.0329589844 ,-0.0329589844 ,0.0036621094 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,-0.0109863281 ,0.0988769531 ,0.0988769531 ,-0.0109863281 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 },
        { -0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,0.0021972656 ,-0.0109863281 ,0.0329589844 ,0.0109863281 ,-0.0002441406 ,0.0012207031 ,-0.0036621094 ,-0.0012207031 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,-0.0109863281 ,0.0549316406 ,-0.1647949219 ,-0.0549316406 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,0.0329589844 ,-0.1647949219 ,0.4943847656 ,0.1647949219 ,-0.0036621094 ,0.0183105469 ,-0.0549316406 ,-0.0183105469 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,0.0109863281 ,-0.0549316406 ,0.1647949219 ,0.0549316406 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 },
        { 0.0012207031 ,0.0036621094 ,-0.0012207031 ,0.0002441406 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0061035156 ,-0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0183105469 ,0.0549316406 ,-0.0183105469 ,0.0036621094 ,-0.0915527344 ,-0.2746582031 ,0.0915527344 ,-0.0183105469 ,0.2746582031 ,0.8239746094 ,-0.2746582031 ,0.0549316406 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.0061035156 ,0.0183105469 ,-0.0061035156 ,0.0012207031 ,-0.0305175781 ,-0.0915527344 ,0.0305175781 ,-0.0061035156 ,0.0915527344 ,0.2746582031 ,-0.0915527344 ,0.0183105469 ,0.0305175781 ,0.0915527344 ,-0.0305175781 ,0.0061035156 },
        { -0.0002441406 ,0.0021972656 ,0.0021972656 ,-0.0002441406 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0012207031 ,-0.0109863281 ,-0.0109863281 ,0.0012207031 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0036621094 ,0.0329589844 ,0.0329589844 ,-0.0036621094 ,0.0183105469 ,-0.1647949219 ,-0.1647949219 ,0.0183105469 ,-0.0549316406 ,0.4943847656 ,0.4943847656 ,-0.0549316406 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0012207031 ,0.0109863281 ,0.0109863281 ,-0.0012207031 ,0.0061035156 ,-0.0549316406 ,-0.0549316406 ,0.0061035156 ,-0.0183105469 ,0.1647949219 ,0.1647949219 ,-0.0183105469 ,-0.0061035156 ,0.0549316406 ,0.0549316406 ,-0.0061035156 },
        { 0.0002441406 ,-0.0012207031 ,0.0036621094 ,0.0012207031 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0012207031 ,0.0061035156 ,-0.0183105469 ,-0.0061035156 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0036621094 ,-0.0183105469 ,0.0549316406 ,0.0183105469 ,-0.0183105469 ,0.0915527344 ,-0.2746582031 ,-0.0915527344 ,0.0549316406 ,-0.2746582031 ,0.8239746094 ,0.2746582031 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0012207031 ,-0.0061035156 ,0.0183105469 ,0.0061035156 ,-0.0061035156 ,0.0305175781 ,-0.0915527344 ,-0.0305175781 ,0.0183105469 ,-0.0915527344 ,0.2746582031 ,0.0915527344 ,0.0061035156 ,-0.0305175781 ,0.0915527344 ,0.0305175781 },
};

/**
 * @brief: Computes the wavelet coefficients, for the unzipped version of the block.
 * (this only works for the 4th order elements.  )
 * @param[in] unzippedVec: unzipped vector
 * @param[in] offset: offset of the block.
 * @param[in] M: interpolation matrix.
 * @param[in] mSz: interpolation matrix dimensions
 * @param[in] eI: element i,j,k values
 * @param[out] wavelets: wavelet coefficents
 * */

template <typename T>
void computeRefineWavelets(const T* unzippedVec, const unsigned int offset,const unsigned int eleOrder,const unsigned int *eI,const unsigned int pWidth,const unsigned int *sz, T* wavelets);


/**
 * @brief: Computes the wavelet coefficients (for coarsening), for the unzipped version of the block.
 * (this only works for the 4th order elements
 *  this only works for the internal blocks. Not compatible with boundary blocks.
 *  this only works for blocks at least have 8 elements (in 3D)
 *  eI should be the lowest of 8 children)
 * @param[in] unzippedVec: unzipped vector
 * @param[in] offset: offset of the block.
 * @param[in] M: interpolation matrix.
 * @param[in] mSz: interpolation matrix dimensions
 * @param[in] eI: element i,j,k values
 * @param[out] wavelets: wavelet coefficents
 * */

template <typename T>
void computeCoarsenWavelets(const T* unzippedVec, const unsigned int offset,const unsigned int eleOrder,const unsigned int *eI,const unsigned int pWidth,const unsigned int *sz, T* wavelets);



template <typename T>
void computeRefineWavelets(const T* unzippedVec, const unsigned int offset,const unsigned int eleOrder,const unsigned int *eI,const unsigned int pWidth,const unsigned int *sz, T* wavelets)
{

    //pad---|element----|--pad
    //*--*--*--*--*--*--*--*--*
    //1--2--3--4--5--6--7--8--9

    // below should be the REFINE_INDEX_OFFSET.
    const unsigned int ib=(eI[0]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int ie=ib+REFINE_END_OFFSET;

    const unsigned int jb=(eI[1]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int je=jb+REFINE_END_OFFSET;

    const unsigned int kb=(eI[2]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int ke=kb+REFINE_END_OFFSET;

    for(unsigned int wIndex=0;wIndex<NUM_REFINE_WAVELET_COEF;wIndex++)
        wavelets[wIndex]=0.0;


    unsigned int m=0;

    for(unsigned int wIndex=0;wIndex<NUM_REFINE_WAVELET_COEF;wIndex++,m=0)
        for(unsigned int k=kb;k<ke;k+=REFINE_INDEX_OFFSET)
            for(unsigned int j=jb;j<je;j+=REFINE_INDEX_OFFSET)
                for(unsigned int i=ib;i<ie;i+=REFINE_INDEX_OFFSET,m++)
                {
                    //if(std::isnan(unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]) || std::isnan(IW_5_2_REFINE[wIndex][m]) ) std::cout<<"unzipVec:  "<<unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]<<"IW_5_2_REFINE[wIndex][m]: "<<IW_5_2_REFINE[wIndex][m]<<" i: j: k: "<<i<<" , "<<j<<"k : "<<k<<std::endl;
                    wavelets[wIndex]+=(IW_5_2_REFINE[wIndex][m]*unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]);
                }



    wavelets[0]=fabs(wavelets[0]-unzippedVec[offset+(kb+3)*sz[1]*sz[0]+(jb+3)*sz[0]+(ib+3)]);
    wavelets[1]=fabs(wavelets[1]-unzippedVec[offset+(kb+3)*sz[1]*sz[0]+(jb+3)*sz[0]+(ib+5)]);

    wavelets[2]=fabs(wavelets[2]-unzippedVec[offset+(kb+3)*sz[1]*sz[0]+(jb+5)*sz[0]+(ib+3)]);
    wavelets[3]=fabs(wavelets[3]-unzippedVec[offset+(kb+3)*sz[1]*sz[0]+(jb+5)*sz[0]+(ib+5)]);

    wavelets[4]=fabs(wavelets[4]-unzippedVec[offset+(kb+5)*sz[1]*sz[0]+(jb+3)*sz[0]+(ib+3)]);
    wavelets[5]=fabs(wavelets[5]-unzippedVec[offset+(kb+5)*sz[1]*sz[0]+(jb+3)*sz[0]+(ib+5)]);

    wavelets[6]=fabs(wavelets[6]-unzippedVec[offset+(kb+5)*sz[1]*sz[0]+(jb+5)*sz[0]+(ib+3)]);
    wavelets[7]=fabs(wavelets[7]-unzippedVec[offset+(kb+5)*sz[1]*sz[0]+(jb+5)*sz[0]+(ib+5)]);




}


template <typename T>
void computeCoarsenWavelets(const T* unzippedVec, const unsigned int offset,const unsigned int eleOrder,const unsigned int *eI,const unsigned int pWidth,const unsigned int *sz, T* wavelets)
{

    //pad---|element1---|--element2-|pad---|
    //*--*--*--*--*--*--*--*--*--*--*--*--*
    //1--2--3--4--5--6--7--8--9--10-11-12-13

    const unsigned int ib=(eI[0]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int ie=ib+COARSE_END_OFFSET;

    const unsigned int jb=(eI[1]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int je=jb+COARSE_END_OFFSET;

    const unsigned int kb=(eI[2]*eleOrder+pWidth-REFINE_INDEX_OFFSET);
    const unsigned int ke=kb+COARSE_END_OFFSET;

    for(unsigned int wIndex=0;wIndex<NUM_COARSE_WAVELET_COEF;wIndex++)
        wavelets[wIndex]=0.0;


    unsigned int m=0;

    for(unsigned int wIndex=0;wIndex<NUM_COARSE_WAVELET_COEF;wIndex++,m=0)
        for(unsigned int k=kb;k<ke;k+=COARSE_INDEX_OFFSET)
            for(unsigned int j=jb;j<je;j+=COARSE_INDEX_OFFSET)
                for(unsigned int i=ib;i<ie;i+=COARSE_INDEX_OFFSET,m++)
                    wavelets[wIndex]+=(IW_4_3_COARSEN[wIndex][m]*unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]);



    m=0;
    for(unsigned int k=(kb+REFINE_INDEX_OFFSET);k<ke;k+=COARSE_INDEX_OFFSET)
        for(unsigned int j=(jb+REFINE_INDEX_OFFSET);j<je;j+=COARSE_INDEX_OFFSET)
            for(unsigned int i=(ib+REFINE_INDEX_OFFSET);i<ie;i+=COARSE_INDEX_OFFSET,m++)
                wavelets[m]=fabs(wavelets[m]-unzippedVec[offset+k*sz[1]*sz[0]+j*sz[0]+i]);




}





/**
 * @brief generic function to compute wavelets for multiple element orders. 
 * @tparam T type of the vector
 * @param unzippedVec : unzip vector
 * @param eleOrder : order of the intepolation to the wavelets
 * @param eI : element index
 * @param pWidth : padding width
 * @param sz : size of the 
 * @param wavelets : wavelet coefficients. 
 * @param szn : number of coefficients. 
 * @param ws: allocated work spaces for wavelet compute interpoation in and out. 
 */
template<typename T>
void refine_wavelets(const T* unzippedVec, const unsigned int eleOrder,const unsigned int *eI, const unsigned int pWidth, const unsigned int *sz , T* wavelets,unsigned int szn, T** ws)
{

    for(unsigned int w=0;w<szn;w++)
        wavelets[w]=0.0;

    unsigned int ib,ie,jb,je,kb,ke;
    ib= (eI[0]*eleOrder + pWidth);  jb = (eI[1]*eleOrder + pWidth) ; kb = (eI[2]*eleOrder + pWidth);
    ie = ib + (eleOrder + 1); je = jb + (eleOrder+1); ke = kb + (eleOrder+1);

    if(eleOrder % 2  == 0 )
    { 
      const unsigned int pp = (eleOrder>>1u);
      
      if(isRefEleSetup  == 0)
      {
        refEl = RefElement(1,pp);
        interpIn.resize((pp+1)*(pp+1)*(pp+1));
        interpOut.resize((pp+1)*(pp+1)*(pp+1));
        wIn.resize((2*pp+1)*(2*pp+1)*(2*pp+1));
        wOut.resize((2*pp+1)*(2*pp+1)*(2*pp+1));
        isRefEleSetup =1;
      }

      //   RefElement refEl = RefElement(1,pp);
      //   std::vector<double>  wIn;
      //   std::vector<double>  wOut;  
      //   std::vector<double>  interpOut;
      //   std::vector<double>  interpIn;

      interpIn.resize((pp+1)*(pp+1)*(pp+1));
      interpOut.resize((pp+1)*(pp+1)*(pp+1));
      wIn.resize((2*pp+1)*(2*pp+1)*(2*pp+1));
      wOut.resize((2*pp+1)*(2*pp+1)*(2*pp+1));

      unsigned int m=0;
      for(unsigned int k = kb; k < ke; k+=2 )
       for(unsigned int j = jb; j < je; j+=2 )
        for(unsigned int i = ib; i < ie; i+=2, m++)
        {
           interpIn[m] = unzippedVec[k*sz[0]*sz[1] + j*sz[0]  + i ];
           //std::cout<<"interp m : "<<m<< " value: "<<interpIn[m] <<" i,j,k "<<i<<" , "<<j<<" , "<<k<<" siz: "<<sz[0]<<std::endl;
        }
          




      unsigned char bit[3];
      for(unsigned int cnum = 0 ; cnum < NUM_CHILDREN; cnum++ )
      {
        refEl.I3D_Parent2Child(interpIn.data(),interpOut.data(),cnum);
        
        bit[0] = binOp::getBit(cnum,0);
        bit[1] = binOp::getBit(cnum,1);
        bit[2] = binOp::getBit(cnum,2);
        
        unsigned int m=0;
        for(unsigned int k = (bit[2]*pp) ; k < ((bit[2] + 1)*pp) +1 ; k++)
         for(unsigned int j = (bit[1]*pp) ; j < ((bit[1] + 1)*pp) +1 ; j++)
          for(unsigned int i = (bit[0]*pp) ; i < ((bit[0] + 1)*pp) +1 ; i++ , m++)
          {
            wIn [ (k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i) ] = unzippedVec[ (k+kb)*sz[0]*sz[1] + (j+jb)*sz[0]  + (i+ib) ] ;
            wOut[ (k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i) ] = interpOut[m];
          }
           

      }

      m=0;  
      for(unsigned int k = 1; k < 2*pp+1; k+=2 )
       for(unsigned int j = 1; j < 2*pp+1; j+=2 )
        for(unsigned int i = 1; i < 2*pp+1; i+=2, m++)
        {
            wavelets[m] = fabs(wIn[(k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i)] - wOut[(k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i)] )/pow(2,pp+1);
            //std::cout<<" wIn: "<<wIn[(k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i)] <<" wOut: "<<wOut[(k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i)]//<<std::endl;  
        }

      
    }else
    { 
      
      // const unsigned int pp = ((eleOrder + 1)>>1u);
      // if(isRefEleSetup  == 0)
      // {
      //   refEl = RefElement(1,pp);
      //   wIn.resize((pp+1)*(pp+1)*(pp+1));
      //   wOut.resize((2*pp+1)*(2*pp+1)*(2*pp+1));     isRefEleSetup =1;
      //   isRefEleSetup =1;
      
      // }

      // unsigned int m=0;
      // for(unsigned int k = kb; k < ke; k+=2 )
      //  for(unsigned int j = jb; j < je; j+=2 )
      //   for(unsigned int i = ib; i < ie; i+=2, m++)
      //     wIn[m] = unzippedVec[(eI[2]*eleOrder + k)*sz[0]*sz[1] + (eI[1]*eleOrder + j)*sz[0]  + (eI[0]*eleOrder + i) ];


    }

    return;


}


/**
 * @brief generic function to compute wavelets for multiple element orders. (coarsenging version)
 * @tparam T type of the vector
 * @param unzippedVec : unzip vector
 * @param eleOrder : order of the intepolation to the wavelets
 * @param eI : element index
 * @param pWidth : padding width
 * @param sz : size of the 
 * @param wavelets : wavelet coefficients. 
 * @param szn : number of coefficients. 
 * @param ws: allocated work spaces for wavelet compute interpoation in and out. 
 */
template<typename T>
void coarsen_wavelets(const T* unzippedVec, const unsigned int eleOrder,const unsigned int *eI, const unsigned int pWidth, const unsigned int *sz , T* wavelets,unsigned int szn, T** ws)
{
    for(unsigned int w=0;w<szn;w++)
        wavelets[w]=0.0;

    //return;

    unsigned int ib,ie,jb,je,kb,ke;
    ib= (eI[0]*eleOrder + pWidth);  jb = (eI[1]*eleOrder + pWidth) ; kb = (eI[2]*eleOrder + pWidth);
    ie = ib + (2*eleOrder + 1); je = jb + (2*eleOrder+1); ke = kb + (2*eleOrder+1);

    if(eleOrder % 2  == 0 )
    { 
      const unsigned int pp = (eleOrder>>1u);
      
      if(isRefEleSetup  == 0)
      {
        refEl = RefElement(1,pp);
        interpIn.resize((pp+1)*(pp+1)*(pp+1));
        interpOut.resize((pp+1)*(pp+1)*(pp+1));
        wIn.resize((2*pp+1)*(2*pp+1)*(2*pp+1));
        wOut.resize((2*pp+1)*(2*pp+1)*(2*pp+1));
        isRefEleSetup =1;
      }

      //   RefElement refEl = RefElement(1,pp);
      //   std::vector<double>  wIn;
      //   std::vector<double>  wOut;  
      //   std::vector<double>  interpOut;
      //   std::vector<double>  interpIn;

      interpIn.resize((pp+1)*(pp+1)*(pp+1));
      interpOut.resize((pp+1)*(pp+1)*(pp+1));
      wIn.resize((2*pp+1)*(2*pp+1)*(2*pp+1));
      wOut.resize((2*pp+1)*(2*pp+1)*(2*pp+1));

      unsigned int m=0;
      for(unsigned int k = kb; k < ke; k+=4 )
       for(unsigned int j = jb; j < je; j+=4 )
        for(unsigned int i = ib; i < ie; i+=4, m++)
          interpIn[m] = unzippedVec[k*sz[0]*sz[1] + j*sz[0]  + i ];

      //std::cout<<" m: in : "<<m<<std::endl;
      unsigned char bit[3];
      
      for(unsigned int cnum = 0 ; cnum < NUM_CHILDREN; cnum++ )
      {
        refEl.I3D_Parent2Child(interpIn.data(),interpOut.data(),cnum);
        
        bit[0] = binOp::getBit(cnum,0);
        bit[1] = binOp::getBit(cnum,1);
        bit[2] = binOp::getBit(cnum,2);
        
        unsigned int m=0;
        for(unsigned int k = (bit[2]*pp) ; k < ((bit[2] + 1)*pp) +1 ; k++)
         for(unsigned int j = (bit[1]*pp) ; j < ((bit[1] + 1)*pp) +1 ; j++)
          for(unsigned int i = (bit[0]*pp) ; i < ((bit[0] + 1)*pp) +1 ; i++ , m++)
          { 
              wIn [ (k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i) ] = unzippedVec[ (2*k+kb)*sz[0]*sz[1] + (2*j+jb)*sz[0]  + (2*i+ib) ] ;
              wOut[ (k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i) ] = interpOut[m];
          }
           

      }

      m=0;
      for(unsigned int k = 1; k < 2*pp+1; k+=2 )
       for(unsigned int j = 1; j < 2*pp+1; j+=2 )
        for(unsigned int i = 1; i < 2*pp+1; i+=2, m++)
        {
            wavelets[m] = fabs(wIn[(k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i)] - wOut[(k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i)] );
            //std::cout<<" wIn: "<<wIn[(k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i)] <<" wOut: "<<wOut[(k)*(eleOrder+1)*(eleOrder+1) + (j)*(eleOrder+1) + (i)]<<std::endl;  
        }
    
      

      
    }else
    { 
      
      // const unsigned int pp = ((eleOrder + 1)>>1u);
      // if(isRefEleSetup  == 0)
      // {
      //   refEl = RefElement(1,pp);
      //   wIn.resize((pp+1)*(pp+1)*(pp+1));
      //   wOut.resize((2*pp+1)*(2*pp+1)*(2*pp+1));     isRefEleSetup =1;
      //   isRefEleSetup =1;
      
      // }

      // unsigned int m=0;
      // for(unsigned int k = kb; k < ke; k+=2 )
      //  for(unsigned int j = jb; j < je; j+=2 )
      //   for(unsigned int i = ib; i < ie; i+=2, m++)
      //     wIn[m] = unzippedVec[(eI[2]*eleOrder + k)*sz[0]*sz[1] + (eI[1]*eleOrder + j)*sz[0]  + (eI[0]*eleOrder + i) ];


    }

    return;



}





#endif //SFCSORTBENCH_WAVELET_H
