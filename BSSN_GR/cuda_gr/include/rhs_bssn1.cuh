// generated by Dendro-GR SymPyGR code gernation framework
//date: 2018-10-06 21:11:58
#ifndef RHS_BSSN1_CUH 
#define RHS_BSSN1_CUH 
#include<iostream>
#include"cuda_runtime.h"
#include<device_launch_parameters.h>
#include "block_cu.h"
#include "params_cu.h"
#include "bssn_rhs_deriv_mem_cuda.h"
#include "cudaUtils.cuh"
#include "derivs.cuh"
#include "cudaUtils.h"
namespace cuda {

/**@brief compute RHS 
 @param[in] __unzipInVar: unzipped input array (global memory) 
 @param[in] MemoryDerivs: allocated workspace for derivative computations 
 @param[in] __dendroBlkList: dendro block list 
 @param[in] __gpuBlockMap: gpu block map  
 @param[in] __deviceProperties: cuda device properties  
 @param[out] __unzipOutVar: unzipped output computed rhs  
*/ 
__global__ void __computeBSSNRHS(double **__unzipOutVar, const double**__unzipInVar,MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const unsigned int * __gpuBlockMap,const cuda::BSSNComputeParams * __bssnParams,const cudaDeviceProp* __deviceProperties);

}// end of namespace cuda


#endif
