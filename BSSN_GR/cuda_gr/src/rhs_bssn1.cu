// generated by Dendro-GR SymPyGR code gernation framework
//date: 2018-10-06 21:11:58
#include "rhs_bssn1.cuh"
namespace cuda {

/**@brief compute RHS 
 @param[in] __unzipInVar: unzipped input array (global memory) 
 @param[in] MemoryDerivs: allocated workspace for derivative computations 
 @param[in] __dendroBlkList: dendro block list 
 @param[in] __gpuBlockMap: gpu block map  
 @param[in] __deviceProperties: cuda device properties  
 @param[out] __unzipOutVar: unzipped output computed rhs  
*/ 
__global__ void __computeBSSNRHS(double **__unzipOutVar, const double**__unzipInVar,MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const unsigned int * __gpuBlockMap,const cuda::BSSNComputeParams * __bssnParams ,const cudaDeviceProp* __deviceProperties){

for(unsigned int blk=__gpuBlockMap[2*blockIdx.x];blk<__gpuBlockMap[2*blockIdx.x+1];++blk){


// blocks assigned to each gpu block 
const _Block dblock=__dendroBlkList[blk];
const unsigned int NUM_SM_UNITS=__deviceProperties->multiProcessorCount;
const unsigned int SM_ID=blockIdx.x%NUM_SM_UNITS;
const unsigned int offset=dblock.getOffset();
const unsigned int *sz=dblock.getSz();
const unsigned int *alignedSz=dblock.getAlignedSz();
const double* hx=dblock.getDx();
const double dx=hx[0];
const double dy=hx[1];
const double dz=hx[2];
const double* ptmin=dblock.getPtMin();
const double* ptmax=dblock.getPtMax();
const unsigned int bflag=dblock.getBFlag();

unsigned int tile_sz[3]={12,12,12};
__shared__  double __sm_base[5248];
double * unzipVarInShared = __sm_base + 0;
double * unzipVarOutShared0 = __sm_base + 1728;
double * unzipVarOutShared1 = __sm_base + 3456;
unsigned int Lb = 0;// load begin bound
unsigned int Le = sz[0]-0;// load end bound
unsigned int BLK_INTERATIONS = ((Le-Lb)<tile_sz[0])? 1: ((int)ceil((double)(Le-Lb-tile_sz[0])/(tile_sz[0]-2*3)))+1;

unsigned int ijk_lm[3*2];
__shared__ bool beta0_bool[1728];
__shared__ bool beta1_bool[1728];
__shared__ bool beta2_bool[1728];

for(unsigned int iter=0;iter<BLK_INTERATIONS;iter++){

		 ijk_lm[2*0+0]=max(0,(int)(0 + tile_sz[0]*iter -2*iter*3));
		 ijk_lm[2*0+1]=min(ijk_lm[2*0+0]+tile_sz[0],sz[0]-0);

		 ijk_lm[2*1+0]=max(0,(int)(0 + tile_sz[1]*iter -2*iter*3));
		 ijk_lm[2*1+1]=min(ijk_lm[2*1+0]+tile_sz[1],sz[1]-0);

		 ijk_lm[2*2+0]=max(0,(int)(0 + tile_sz[2]*iter -2*iter*3));
		 ijk_lm[2*2+1]=min(ijk_lm[2*2+0]+tile_sz[2],sz[2]-0);
		 //printf(" iter : %d threadid (%d,%d,%d) tile begin: (%d,%d,%d) tile end: (%d,%d,%d) \n",iter, threadIdx.x,threadIdx.y,threadIdx.z,ijk_lm[0],ijk_lm[2],ijk_lm[4],ijk_lm[1],ijk_lm[3],ijk_lm[5]);


		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) unzipVarOutShared0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) unzipVarOutShared1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		cuda::__extractSign3D<double>((double *)unzipVarInShared,(bool *) beta0_bool,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__extractSign3D<double>((double *)unzipVarOutShared0,(bool *) beta1_bool,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__extractSign3D<double>((double *)unzipVarOutShared1,(bool *) beta2_bool,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_ALPHA][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable alpha 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable alpha 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable alpha 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable alpha 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable alpha 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable alpha 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable beta0 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable beta0 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable beta0 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable beta0 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable beta0 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable beta0 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable beta1 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable beta1 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable beta1 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable beta1 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable beta1 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable beta1 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable beta2 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable beta2 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable beta2 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable beta2 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable beta2 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable beta2 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_B0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable B0 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable B0 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable B0 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_B0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_B1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable B1 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable B1 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable B1 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_B1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_B2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable B2 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable B2 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable B2 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_B2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_CHI][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable chi 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable chi 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable chi 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable chi 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable chi 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable chi 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_chi[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_GT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable Gt0 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable Gt0 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable Gt0 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_Gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_GT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable Gt1 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable Gt1 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable Gt1 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_Gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_GT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable Gt2 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable Gt2 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable Gt2 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_Gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_K][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable K 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable K 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable K 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_K[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable gt0 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable gt0 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable gt0 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable gt0 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable gt0 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable gt0 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable gt1 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable gt1 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable gt1 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable gt1 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable gt1 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable gt1 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable gt2 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable gt2 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable gt2 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable gt2 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable gt2 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable gt2 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable gt3 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable gt3 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable gt3 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable gt3 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable gt3 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable gt3 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable gt4 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable gt4 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable gt4 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable gt4 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable gt4 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable gt4 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable gt5 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv xy for variable gt5 
		_RSWS_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_1_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv xz for variable gt5 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_0_2_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable gt5 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		// computing deriv yz for variable gt5 
		_RSWS_deriv42_z((double *) unzipVarOutShared1,(const double *) unzipVarOutShared0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_2_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);

		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable gt5 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_deriv42_xx((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		_RSWS_deriv42_yy((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_1_1_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__grad2_1_1_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42_zz((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad2_2_2_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_0_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_0_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_2_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_1_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_1_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable At0 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable At0 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable At0 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable At1 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable At1 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable At1 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable At2 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable At2 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable At2 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable At3 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable At3 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable At3 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable At4 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable At4 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable At4 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		//load input data from global to shared memory
		cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		//sync to make sure all the data is loaded
		// computing deriv x for variable At5 
		_RSWS_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_0_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv y for variable At5 
		_RSWS_deriv42_y((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_1_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();

		// computing deriv z for variable At5 
		_RSWS_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__grad_2_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();


		_RSWS_ko_deriv42_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		_RSWS_ko_deriv42_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_1_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__kograd_1_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_ko_deriv42_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__kograd_2_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_x((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta0_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_0_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_0_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		_RSWS_deriv42adv_y((double *) unzipVarOutShared1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta1_bool , 3, bflag);
		_RSWS_deriv42adv_z((double *) unzipVarOutShared0,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) alignedSz , (const unsigned int *) tile_sz, (const bool*) beta2_bool , 3, bflag);
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared1,&(__derivWorkspace->__agrad_2_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();
		cuda::__storeSharedToGlobal3D<double>((double *) unzipVarOutShared0,&(__derivWorkspace->__agrad_2_At5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		__syncthreads();
		  } // end of block tile loop

		__syncthreads();
	// bssn compute parameters 
	const double lambda[4]={__bssnParams->BSSN_LAMBDA[0],__bssnParams->BSSN_LAMBDA[1],__bssnParams->BSSN_LAMBDA[2],__bssnParams->BSSN_LAMBDA[3]};
	const double lambda_f[2]={__bssnParams->BSSN_LAMBDA_F[0],__bssnParams->BSSN_LAMBDA_F[1]};
	const double kosigma=__bssnParams->KO_DISS_SIGMA;
	const double ETA_R0=__bssnParams->ETA_R0;
	const double R0=__bssnParams->ETA_R0;
	const double ETA_DAMPING=__bssnParams->ETA_DAMPING;
	const double ETA_DAMPING_EXP=__bssnParams->ETA_DAMPING_EXP;
	const double ETA_CONST=__bssnParams->ETA_CONST;
	const double eta_power[2]={__bssnParams->BSSN_ETA_POWER[0],__bssnParams->BSSN_ETA_POWER[1]};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                             generated code for a_rhs              begin   
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	 tile_sz[0]=8;
	 tile_sz[1]=8;
	 tile_sz[2]=8;
	
	Lb = 3;// load begin bound
	Le = sz[0]-3;// load end bound
	BLK_INTERATIONS = ((Le-Lb)<tile_sz[0])? 1: ((int)ceil((double)(Le-Lb-tile_sz[0])/(tile_sz[0]-2*0)))+1;

	 //input vars begin
	double * alpha = __sm_base + 0;
	double * beta2 = __sm_base + 512;
	double * beta0 = __sm_base + 1024;
	double * beta1 = __sm_base + 1536;
	double * K = __sm_base + 2048;
	 //input vars end
	 // staged vars begin
	 // staged vars end
	 // deriv vars begin
	double * agrad_0_alpha = __sm_base + 2560;
	double * agrad_2_alpha = __sm_base + 3072;
	double * agrad_1_alpha = __sm_base + 3584;
	 // deriv vars end
	 // output vars begin
	double * a_rhs = __sm_base + 4096;
	 // output vars end
	for(unsigned int iter=0;iter<BLK_INTERATIONS;iter++){

		 ijk_lm[2*0+0]=max(3,(int)(3 + tile_sz[0]*iter -2*iter*0));
		 ijk_lm[2*0+1]=min(ijk_lm[2*0+0]+tile_sz[0],sz[0]-3);
		 ijk_lm[2*1+0]=max(3,(int)(3 + tile_sz[1]*iter -2*iter*0));
		 ijk_lm[2*1+1]=min(ijk_lm[2*1+0]+tile_sz[1],sz[1]-3);
		 ijk_lm[2*2+0]=max(3,(int)(3 + tile_sz[2]*iter -2*iter*0));
		 ijk_lm[2*2+1]=min(ijk_lm[2*2+0]+tile_sz[2],sz[2]-3);


		 if((threadIdx.x>=(ijk_lm[1]-ijk_lm[0])) || (threadIdx.y>=(ijk_lm[3]-ijk_lm[2])) || (threadIdx.z>=(ijk_lm[5]-ijk_lm[4]))) return ;
		 //printf(" iter : %d threadid (%d,%d,%d) tile begin: (%d,%d,%d) tile end: (%d,%d,%d) \n",iter, threadIdx.x,threadIdx.y,threadIdx.z,ijk_lm[0],ijk_lm[2],ijk_lm[4],ijk_lm[1],ijk_lm[3],ijk_lm[5]);


		 //load data from global to shared memory
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_ALPHA][offset],(double *) alpha,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) beta2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) beta0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) beta1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_K][offset],(double *) K,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_alpha,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_alpha,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_alpha[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_alpha,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 __syncthreads();



		 double x,y,z,r_coord,eta;
		 unsigned int pp=0*tile_sz[0]*tile_sz[1]+threadIdx.y*tile_sz[1]+threadIdx.x;
		  for(unsigned int k=0;k<(ijk_lm[5]-ijk_lm[4]);++k,pp+=tile_sz[0]*tile_sz[1]){
			  z = ptmin[2] + (k+ijk_lm[4])*dz;
			  y = ptmin[1] + (threadIdx.y+ijk_lm[2])*dy;
			  y = ptmin[1] + (threadIdx.x+ijk_lm[2])*dy;
			  x = ptmin[0] + (threadIdx.x+ijk_lm[0])*dx;
			  r_coord = sqrt(x*x + y*y + z*z);
			  eta=ETA_CONST;
			  if (r_coord >= ETA_R0) {
			     eta *= pow( (ETA_R0/r_coord), ETA_DAMPING_EXP);
			  }

			  // Dendro: {{{ 
			  // Dendro: original ops: 12
			     // Dendro: printing temp variables
			      // Dendro: printing variables

		      a_rhs[pp] = -2*K[pp]*alpha[pp] + lambda[0]*(beta0[pp]*agrad_0_alpha[pp] + beta1[pp]*agrad_1_alpha[pp] + beta2[pp]*agrad_2_alpha[pp]);
			      // Dendro: reduced ops: 12
			      // Dendro: }}} 
			     } //loop z end 
			__syncthreads();

			// sotre computed variables

		cuda::__storeSharedToGlobal3D<double>(a_rhs, &__unzipOutVar[cuda::VAR::U_ALPHA][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		   __syncthreads();
		} // end of tile loop 

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                             generated code for b_rhs              begin   
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	 tile_sz[0]=6;
	 tile_sz[1]=6;
	 tile_sz[2]=6;
	
	Lb = 3;// load begin bound
	Le = sz[0]-3;// load end bound
	BLK_INTERATIONS = ((Le-Lb)<tile_sz[0])? 1: ((int)ceil((double)(Le-Lb-tile_sz[0])/(tile_sz[0]-2*0)))+1;

	 //input vars begin
	double * B2 = __sm_base + 0;
	alpha = __sm_base + 216;
	beta2 = __sm_base + 432;
	double * B1 = __sm_base + 648;
	beta0 = __sm_base + 864;
	beta1 = __sm_base + 1080;
	double * B0 = __sm_base + 1296;
	 //input vars end
	 // staged vars begin
	 // staged vars end
	 // deriv vars begin
	double * agrad_1_beta1 = __sm_base + 1512;
	double * agrad_2_beta1 = __sm_base + 1728;
	double * agrad_0_beta0 = __sm_base + 1944;
	double * agrad_2_beta2 = __sm_base + 2160;
	double * agrad_2_beta0 = __sm_base + 2376;
	double * agrad_1_beta0 = __sm_base + 2592;
	double * agrad_0_beta2 = __sm_base + 2808;
	double * agrad_1_beta2 = __sm_base + 3024;
	double * agrad_0_beta1 = __sm_base + 3240;
	 // deriv vars end
	 // output vars begin
	double * b_rhs2 = __sm_base + 3456;
	double * b_rhs1 = __sm_base + 3672;
	double * b_rhs0 = __sm_base + 3888;
	 // output vars end
	for(unsigned int iter=0;iter<BLK_INTERATIONS;iter++){

		 ijk_lm[2*0+0]=max(3,(int)(3 + tile_sz[0]*iter -2*iter*0));
		 ijk_lm[2*0+1]=min(ijk_lm[2*0+0]+tile_sz[0],sz[0]-3);
		 ijk_lm[2*1+0]=max(3,(int)(3 + tile_sz[1]*iter -2*iter*0));
		 ijk_lm[2*1+1]=min(ijk_lm[2*1+0]+tile_sz[1],sz[1]-3);
		 ijk_lm[2*2+0]=max(3,(int)(3 + tile_sz[2]*iter -2*iter*0));
		 ijk_lm[2*2+1]=min(ijk_lm[2*2+0]+tile_sz[2],sz[2]-3);


		 if((threadIdx.x>=(ijk_lm[1]-ijk_lm[0])) || (threadIdx.y>=(ijk_lm[3]-ijk_lm[2])) || (threadIdx.z>=(ijk_lm[5]-ijk_lm[4]))) return ;
		 //printf(" iter : %d threadid (%d,%d,%d) tile begin: (%d,%d,%d) tile end: (%d,%d,%d) \n",iter, threadIdx.x,threadIdx.y,threadIdx.z,ijk_lm[0],ijk_lm[2],ijk_lm[4],ijk_lm[1],ijk_lm[3],ijk_lm[5]);


		 //load data from global to shared memory
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_B2][offset],(double *) B2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_ALPHA][offset],(double *) alpha,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) beta2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_B1][offset],(double *) B1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) beta0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) beta1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_B0][offset],(double *) B0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_beta1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_beta1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_beta0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_beta2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_beta0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_beta0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_beta2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_beta2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_beta1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 __syncthreads();



		 double x,y,z,r_coord,eta;
		 unsigned int pp=0*tile_sz[0]*tile_sz[1]+threadIdx.y*tile_sz[1]+threadIdx.x;
		  for(unsigned int k=0;k<(ijk_lm[5]-ijk_lm[4]);++k,pp+=tile_sz[0]*tile_sz[1]){
			  z = ptmin[2] + (k+ijk_lm[4])*dz;
			  y = ptmin[1] + (threadIdx.y+ijk_lm[2])*dy;
			  y = ptmin[1] + (threadIdx.x+ijk_lm[2])*dy;
			  x = ptmin[0] + (threadIdx.x+ijk_lm[0])*dx;
			  r_coord = sqrt(x*x + y*y + z*z);
			  eta=ETA_CONST;
			  if (r_coord >= ETA_R0) {
			     eta *= pow( (ETA_R0/r_coord), ETA_DAMPING_EXP);
			  }

			  // Dendro: {{{ 
			  // Dendro: original ops: 51
			     // Dendro: printing temp variables
		 const double 		DENDRO_0 = (3.0/4.0)*alpha[pp]*lambda_f[1] + (3.0/4.0)*lambda_f[0];
			      // Dendro: printing variables

		      b_rhs0[pp] = B0[pp]*DENDRO_0 + lambda[1]*(beta0[pp]*agrad_0_beta0[pp] + beta1[pp]*agrad_1_beta0[pp] + beta2[pp]*agrad_2_beta0[pp]);
		      b_rhs1[pp] = B1[pp]*DENDRO_0 + lambda[1]*(beta0[pp]*agrad_0_beta1[pp] + beta1[pp]*agrad_1_beta1[pp] + beta2[pp]*agrad_2_beta1[pp]);
		      b_rhs2[pp] = B2[pp]*DENDRO_0 + lambda[1]*(beta0[pp]*agrad_0_beta2[pp] + beta1[pp]*agrad_1_beta2[pp] + beta2[pp]*agrad_2_beta2[pp]);
			      // Dendro: reduced ops: 39
			      // Dendro: }}} 
			     } //loop z end 
			__syncthreads();

			// sotre computed variables

		cuda::__storeSharedToGlobal3D<double>(b_rhs2, &__unzipOutVar[cuda::VAR::U_BETA2][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>(b_rhs1, &__unzipOutVar[cuda::VAR::U_BETA1][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>(b_rhs0, &__unzipOutVar[cuda::VAR::U_BETA0][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		   __syncthreads();
		} // end of tile loop 

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                             generated code for gt_rhs              begin   
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	 tile_sz[0]=4;
	 tile_sz[1]=4;
	 tile_sz[2]=4;
	
	Lb = 3;// load begin bound
	Le = sz[0]-3;// load end bound
	BLK_INTERATIONS = ((Le-Lb)<tile_sz[0])? 1: ((int)ceil((double)(Le-Lb-tile_sz[0])/(tile_sz[0]-2*0)))+1;

	 //input vars begin
	double * At0 = __sm_base + 0;
	double * gt4 = __sm_base + 64;
	double * gt3 = __sm_base + 128;
	alpha = __sm_base + 192;
	double * gt2 = __sm_base + 256;
	beta2 = __sm_base + 320;
	double * gt0 = __sm_base + 384;
	double * gt1 = __sm_base + 448;
	double * At2 = __sm_base + 512;
	beta0 = __sm_base + 576;
	double * At3 = __sm_base + 640;
	double * At4 = __sm_base + 704;
	double * At5 = __sm_base + 768;
	double * gt5 = __sm_base + 832;
	beta1 = __sm_base + 896;
	double * At1 = __sm_base + 960;
	 //input vars end
	 // staged vars begin
	 // staged vars end
	 // deriv vars begin
	double * agrad_1_gt3 = __sm_base + 1024;
	double * grad_2_beta0 = __sm_base + 1088;
	double * agrad_2_gt5 = __sm_base + 1152;
	double * agrad_1_gt0 = __sm_base + 1216;
	double * agrad_0_gt1 = __sm_base + 1280;
	double * agrad_1_gt2 = __sm_base + 1344;
	double * grad_2_beta2 = __sm_base + 1408;
	double * agrad_1_gt5 = __sm_base + 1472;
	double * agrad_0_gt2 = __sm_base + 1536;
	double * agrad_1_gt1 = __sm_base + 1600;
	double * grad_1_beta2 = __sm_base + 1664;
	double * agrad_2_gt2 = __sm_base + 1728;
	double * agrad_2_gt0 = __sm_base + 1792;
	double * agrad_1_gt4 = __sm_base + 1856;
	double * agrad_0_gt0 = __sm_base + 1920;
	double * grad_2_beta1 = __sm_base + 1984;
	double * grad_0_beta0 = __sm_base + 2048;
	double * agrad_2_gt4 = __sm_base + 2112;
	double * agrad_0_gt3 = __sm_base + 2176;
	double * agrad_2_gt3 = __sm_base + 2240;
	double * agrad_0_gt4 = __sm_base + 2304;
	double * grad_0_beta1 = __sm_base + 2368;
	double * agrad_0_gt5 = __sm_base + 2432;
	double * grad_1_beta0 = __sm_base + 2496;
	double * grad_1_beta1 = __sm_base + 2560;
	double * grad_0_beta2 = __sm_base + 2624;
	double * agrad_2_gt1 = __sm_base + 2688;
	 // deriv vars end
	 // output vars begin
	double * gt_rhs22 = __sm_base + 2752;
	double * gt_rhs02 = __sm_base + 2816;
	double * gt_rhs12 = __sm_base + 2880;
	double * gt_rhs00 = __sm_base + 2944;
	double * gt_rhs11 = __sm_base + 3008;
	double * gt_rhs01 = __sm_base + 3072;
	 // output vars end
	for(unsigned int iter=0;iter<BLK_INTERATIONS;iter++){

		 ijk_lm[2*0+0]=max(3,(int)(3 + tile_sz[0]*iter -2*iter*0));
		 ijk_lm[2*0+1]=min(ijk_lm[2*0+0]+tile_sz[0],sz[0]-3);
		 ijk_lm[2*1+0]=max(3,(int)(3 + tile_sz[1]*iter -2*iter*0));
		 ijk_lm[2*1+1]=min(ijk_lm[2*1+0]+tile_sz[1],sz[1]-3);
		 ijk_lm[2*2+0]=max(3,(int)(3 + tile_sz[2]*iter -2*iter*0));
		 ijk_lm[2*2+1]=min(ijk_lm[2*2+0]+tile_sz[2],sz[2]-3);


		 if((threadIdx.x>=(ijk_lm[1]-ijk_lm[0])) || (threadIdx.y>=(ijk_lm[3]-ijk_lm[2])) || (threadIdx.z>=(ijk_lm[5]-ijk_lm[4]))) return ;
		 //printf(" iter : %d threadid (%d,%d,%d) tile begin: (%d,%d,%d) tile end: (%d,%d,%d) \n",iter, threadIdx.x,threadIdx.y,threadIdx.z,ijk_lm[0],ijk_lm[2],ijk_lm[4],ijk_lm[1],ijk_lm[3],ijk_lm[5]);


		 //load data from global to shared memory
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT0][offset],(double *) At0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT4][offset],(double *) gt4,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT3][offset],(double *) gt3,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_ALPHA][offset],(double *) alpha,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT2][offset],(double *) gt2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) beta2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT0][offset],(double *) gt0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT1][offset],(double *) gt1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT2][offset],(double *) At2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) beta0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT3][offset],(double *) At3,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT4][offset],(double *) At4,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT5][offset],(double *) At5,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMGT5][offset],(double *) gt5,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) beta1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&__unzipInVar[cuda::VAR::U_SYMAT1][offset],(double *) At1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_gt3,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__grad_2_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) grad_2_beta0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_gt5,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_gt0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_gt1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_gt2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__grad_2_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) grad_2_beta2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_gt5,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_gt2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_gt1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__grad_1_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) grad_1_beta2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_gt2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_gt2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_gt0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_1_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_1_gt4,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_gt0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_gt0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__grad_2_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) grad_2_beta1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__grad_0_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) grad_0_beta0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_gt4,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_gt3,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_gt3[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_gt3,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_gt4[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_gt4,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__grad_0_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) grad_0_beta1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_0_gt5[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_0_gt5,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__grad_1_beta0[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) grad_1_beta0,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__grad_1_beta1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) grad_1_beta1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__grad_0_beta2[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) grad_0_beta2,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 cuda::__loadGlobalToShared3D<double>(&(__derivWorkspace->__agrad_2_gt1[SM_ID*(__derivWorkspace->__maxBlkSz)]),(double *) agrad_2_gt1,(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		 __syncthreads();



		 double x,y,z,r_coord,eta;
		 unsigned int pp=0*tile_sz[0]*tile_sz[1]+threadIdx.y*tile_sz[1]+threadIdx.x;
		  for(unsigned int k=0;k<(ijk_lm[5]-ijk_lm[4]);++k,pp+=tile_sz[0]*tile_sz[1]){
			  z = ptmin[2] + (k+ijk_lm[4])*dz;
			  y = ptmin[1] + (threadIdx.y+ijk_lm[2])*dy;
			  y = ptmin[1] + (threadIdx.x+ijk_lm[2])*dy;
			  x = ptmin[0] + (threadIdx.x+ijk_lm[0])*dx;
			  r_coord = sqrt(x*x + y*y + z*z);
			  eta=ETA_CONST;
			  if (r_coord >= ETA_R0) {
			     eta *= pow( (ETA_R0/r_coord), ETA_DAMPING_EXP);
			  }

			  // Dendro: {{{ 
			  // Dendro: original ops: 210
			     // Dendro: printing temp variables
		 const double 		DENDRO_0 = 2*alpha[pp];
		 const double 		DENDRO_1 = grad_0_beta0[pp];
		 const double 		DENDRO_2 = grad_1_beta1[pp];
		 const double 		DENDRO_3 = (2.0/3.0)*gt0[pp];
		 const double 		DENDRO_4 = grad_2_beta2[pp];
		 const double 		DENDRO_5 = grad_0_beta1[pp];
		 const double 		DENDRO_6 = 2*gt1[pp];
		 const double 		DENDRO_7 = grad_0_beta2[pp];
		 const double 		DENDRO_8 = 2*gt2[pp];
		 const double 		DENDRO_9 = grad_1_beta0[pp];
		 const double 		DENDRO_10 = grad_1_beta2[pp];
		 const double 		DENDRO_11 = (1.0/3.0)*gt1[pp];
		 const double 		DENDRO_12 = (2.0/3.0)*DENDRO_4;
		 const double 		DENDRO_13 = grad_2_beta0[pp];
		 const double 		DENDRO_14 = grad_2_beta1[pp];
		 const double 		DENDRO_15 = (1.0/3.0)*gt2[pp];
		 const double 		DENDRO_16 = (2.0/3.0)*DENDRO_2;
		 const double 		DENDRO_17 = (2.0/3.0)*DENDRO_1;
		 const double 		DENDRO_18 = 2*gt4[pp];
		 const double 		DENDRO_19 = (1.0/3.0)*gt4[pp];
			      // Dendro: printing variables

		      gt_rhs00[pp] = -At0[pp]*DENDRO_0 + (4.0/3.0)*DENDRO_1*gt0[pp] - DENDRO_2*DENDRO_3 - DENDRO_3*DENDRO_4 + DENDRO_5*DENDRO_6 + DENDRO_7*DENDRO_8 + beta0[pp]*agrad_0_gt0[pp] + beta1[pp]*agrad_1_gt0[pp] + beta2[pp]*agrad_2_gt0[pp];
		      gt_rhs01[pp] = -At1[pp]*DENDRO_0 + DENDRO_1*DENDRO_11 + DENDRO_10*gt2[pp] + DENDRO_11*DENDRO_2 - DENDRO_12*gt1[pp] + DENDRO_5*gt3[pp] + DENDRO_7*gt4[pp] + DENDRO_9*gt0[pp] + beta0[pp]*agrad_0_gt1[pp] + beta1[pp]*agrad_1_gt1[pp] + beta2[pp]*agrad_2_gt1[pp];
		      gt_rhs02[pp] = -At2[pp]*DENDRO_0 + DENDRO_1*DENDRO_15 + DENDRO_13*gt0[pp] + DENDRO_14*gt1[pp] + DENDRO_15*DENDRO_4 - DENDRO_16*gt2[pp] + DENDRO_5*gt4[pp] + DENDRO_7*gt5[pp] + beta0[pp]*agrad_0_gt2[pp] + beta1[pp]*agrad_1_gt2[pp] + beta2[pp]*agrad_2_gt2[pp];
		      gt_rhs11[pp] = -At3[pp]*DENDRO_0 + DENDRO_10*DENDRO_18 - DENDRO_12*gt3[pp] - DENDRO_17*gt3[pp] + (4.0/3.0)*DENDRO_2*gt3[pp] + DENDRO_6*DENDRO_9 + beta0[pp]*agrad_0_gt3[pp] + beta1[pp]*agrad_1_gt3[pp] + beta2[pp]*agrad_2_gt3[pp];
		      gt_rhs12[pp] = -At4[pp]*DENDRO_0 + DENDRO_10*gt5[pp] + DENDRO_13*gt1[pp] + DENDRO_14*gt3[pp] - DENDRO_17*gt4[pp] + DENDRO_19*DENDRO_2 + DENDRO_19*DENDRO_4 + DENDRO_9*gt2[pp] + beta0[pp]*agrad_0_gt4[pp] + beta1[pp]*agrad_1_gt4[pp] + beta2[pp]*agrad_2_gt4[pp];
		      gt_rhs22[pp] = -At5[pp]*DENDRO_0 + DENDRO_13*DENDRO_8 + DENDRO_14*DENDRO_18 - DENDRO_16*gt5[pp] - DENDRO_17*gt5[pp] + (4.0/3.0)*DENDRO_4*gt5[pp] + beta0[pp]*agrad_0_gt5[pp] + beta1[pp]*agrad_1_gt5[pp] + beta2[pp]*agrad_2_gt5[pp];
			      // Dendro: reduced ops: 162
			      // Dendro: }}} 
			     } //loop z end 
			__syncthreads();

			// sotre computed variables

		cuda::__storeSharedToGlobal3D<double>(gt_rhs22, &__unzipOutVar[cuda::VAR::U_SYMGT5][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>(gt_rhs02, &__unzipOutVar[cuda::VAR::U_SYMGT2][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>(gt_rhs12, &__unzipOutVar[cuda::VAR::U_SYMGT4][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>(gt_rhs00, &__unzipOutVar[cuda::VAR::U_SYMGT0][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>(gt_rhs11, &__unzipOutVar[cuda::VAR::U_SYMGT3][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal3D<double>(gt_rhs01, &__unzipOutVar[cuda::VAR::U_SYMGT1][offset],(const unsigned int *) ijk_lm,(const unsigned int *) alignedSz,(const unsigned int *) tile_sz);
		   __syncthreads();
		} // end of tile loop 

	  } // end of block assigned to gpu block loop 

	} // end of kernel 


}// end of namespace cuda
